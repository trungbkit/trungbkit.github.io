{"version":3,"sources":["components/shared-components/soldier.js","components/shared-components/notification/item.js","components/shared-components/notification/index.js","components/pages/loading-screen.js","utils/keyGenerator.js","models/notification.js","components/pages/main.js","utils/history.js","router.js","stores/index.js","stores/users.js","stores/notification.js","App.js","serviceWorker.js","index.js"],"names":["Soldier","_ref","type","quantity","onClick","isSmall","_ref$showNumber","showNumber","_ref$animate","animate","react_default","a","createElement","className","concat","NotificationItem","notification","remove","title","message","src","alt","inject","observer","notificationStore","notifications","map","n","item","key","id","LoadingScreen","progress","style","width","i","keyGen","Notification","Object","classCallCheck","this","Main","props","_this","possibleConstructorReturn","getPrototypeOf","call","onModalClosed","userStore","setState","showModal","selectedSoldiers","Array","fill","freeSoldiers","soldiers","saveObstacles","push","attack","state","loaded","selectedObstacles","freeObstacles","nextProps","prevState","_nextProps$userStore","obstacles","from","list","index","length","newList","toConsumableArray","_this$state","findIndex","obs","newFreeObstacles","removeItem","_this$state2","newSelectedObstacles","_this$state3","sol","newFreeSoldiers","objectSpread","_this$state4","removedSol","s","newI","newSelectedSoldiers","reduce","prev","curr","arguments","undefined","soldier","_this2","_this$state5","backgroundImage","backgroundColor","currentHealth","renderObstacleList","removeObstacle","selectObstacle","renderSoldierList","index_es","open","onClose","center","selectSoldier","removeSoldier","placeholder","React","Component","createBrowserHistory","CONDITION","MyRouter","finishProgress","setTimeout","checkStatus","initProgress","Router","history","Switch","Route","path","component","exact","render","Redirect","to","loading_screen","stores","action","bound","username","address","observable","computed","_notification","filter","configure","enforceActions","App","index_module","Fragment","router","shared_components_notification","Boolean","window","location","hostname","match","root","document","getElementById","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee3b59c1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Soldier = ({\n  type, quantity, onClick, isSmall, showNumber = true, animate = false,\n}) => (\n  <div className={`soldier ${type} ${isSmall ? 'mini' : ''} ${animate ? 'animate' : ''}`} onClick={() => onClick()}>\n    {showNumber ? <div className=\"quantity\">{quantity}</div> : null}\n  </div>\n);\n\nSoldier.propTypes = {\n  type: PropTypes.string,\n  quantity: PropTypes.number,\n  onClick: PropTypes.func,\n  isSmall: PropTypes.bool,\n  showNumber: PropTypes.bool,\n  animate: PropTypes.bool,\n};\n\nexport default Soldier;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst dangerIcon = '/images/danger-icon.svg';\nconst successIcon = '/images/success-icon.svg';\n\nconst NotificationItem = ({ notification, remove }) => {\n  const {\n    title, message, type,\n  } = notification;\n  return (\n    <div className=\"notification-item\">\n      <div className=\"title-container\">\n        <div className=\"title-wrapper\">\n          <img src={type === 'success' ? successIcon : dangerIcon} alt=\"success\" />\n          <span>{title}</span>\n        </div>\n        <div className=\"close\" onClick={remove}>\n          ×\n        </div>\n      </div>\n      <div className=\"message\">{message}</div>\n    </div>\n  );\n};\n\nNotificationItem.propTypes = {\n  notification: PropTypes.instanceOf(Object),\n  remove: PropTypes.func,\n};\n\nexport default NotificationItem;\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport NotificationItem from './item';\n\nconst Notification = ({ notificationStore }) => (\n  <div className=\"notification-frame\">\n    {notificationStore.notifications.map(n => (\n      <NotificationItem notification={n} key={n.id} remove={() => notificationStore.remove(n.id)} />\n    ))}\n  </div>\n);\n\nNotification.propTypes = {\n  notificationStore: PropTypes.instanceOf(Object),\n};\n\nexport default inject('notificationStore')(observer(Notification));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoadingScreen = ({ progress }) => (\n  <div className=\"loading-screen\">\n    <div className=\"logo\">\n      <div className=\"text\">Loading...</div>\n    </div>\n    <div className=\"progress-bar\">\n      <div className=\"filler\" style={{ width: progress * 300 }} />\n    </div>\n  </div>\n);\n\nLoadingScreen.propTypes = {\n  progress: PropTypes.number,\n};\n\nexport default LoadingScreen;\n","let i = 1;\n\nconst keyGen = () => {\n  i += 1;\n  return i;\n};\n\nexport default keyGen;\n","export default class Notification {\n  constructor(id, title, message, type) {\n    this.id = id;\n    this.title = title;\n    this.message = message;\n    this.type = type;\n  }\n}\n","import React from 'react';\nimport Modal from 'react-responsive-modal';\nimport { observer, inject } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport { Soldier } from '../shared-components';\nimport keyGen from '../../utils/keyGenerator';\nimport Notification from '../../models/notification';\n\n@inject('userStore', 'notificationStore')\n@observer\nclass Main extends React.Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { soldiers, obstacles } = nextProps.userStore;\n    if (!prevState.loaded) {\n      return {\n        loaded: true,\n        freeObstacles: Array.from(obstacles),\n        freeSoldiers: Array.from(soldiers),\n      };\n    }\n    return null;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loaded: false,\n      selectedSoldiers: new Array(5).fill(null),\n      selectedObstacles: new Array(5).fill(null),\n      freeObstacles: [],\n      freeSoldiers: [],\n      showModal: false,\n    };\n  }\n\n  onModalClosed = () => {\n    const { userStore } = this.props;\n    this.setState({\n      showModal: false,\n      selectedSoldiers: new Array(5).fill(null),\n      freeSoldiers: userStore.soldiers,\n    });\n  };\n\n  saveObstacles = () => {\n    const { notificationStore } = this.props;\n    notificationStore.push(\n      new Notification(keyGen(), 'Save obstacles', 'Saved successful!!!', 'success')\n    );\n  };\n\n  attack = () => {\n    const { notificationStore } = this.props;\n    notificationStore.push(new Notification(keyGen(), 'Attack', 'Attacked', 'success'));\n  };\n\n  removeItem(list, index) {\n    const { length } = list;\n    const newList = [...list];\n    for (let i = index; i < length; i += 1) {\n      newList[i] = newList[i + 1] || null;\n    }\n    return newList;\n  }\n\n  selectObstacle(index) {\n    const { selectedObstacles, freeObstacles } = this.state;\n    if (!selectedObstacles[4]) {\n      const i = selectedObstacles.findIndex(obs => !obs);\n      selectedObstacles[i] = freeObstacles[index];\n      const newFreeObstacles = this.removeItem(freeObstacles, index);\n      this.setState({ selectedObstacles, freeObstacles: newFreeObstacles });\n    }\n  }\n\n  removeObstacle(index) {\n    const { selectedObstacles, freeObstacles } = this.state;\n    const i = freeObstacles.findIndex(obs => !obs);\n    freeObstacles[i] = selectedObstacles[index];\n    const newSelectedObstacles = this.removeItem(selectedObstacles, index);\n    this.setState({ selectedObstacles: newSelectedObstacles, freeObstacles });\n  }\n\n  selectSoldier(index) {\n    const { selectedSoldiers, freeSoldiers } = this.state;\n    if (!selectedSoldiers[4]) {\n      const i = selectedSoldiers.findIndex(sol => !sol);\n      selectedSoldiers[i] = freeSoldiers[index];\n      let newFreeSoldiers = [...freeSoldiers];\n      const sol = newFreeSoldiers[index];\n      newFreeSoldiers[index] = { ...sol, quantity: sol.quantity - 1 };\n      if (!newFreeSoldiers[index].quantity) {\n        newFreeSoldiers = this.removeItem(newFreeSoldiers, index);\n      }\n      this.setState({ selectedSoldiers, freeSoldiers: newFreeSoldiers });\n    }\n  }\n\n  removeSoldier(index) {\n    const { selectedSoldiers, freeSoldiers } = this.state;\n    const removedSol = selectedSoldiers[index];\n    const newFreeSoldiers = [...freeSoldiers];\n    const i = newFreeSoldiers.findIndex(s => s && s.type === removedSol.type);\n    if (i !== -1) {\n      const sol = newFreeSoldiers[i];\n      newFreeSoldiers[i] = { ...sol, quantity: sol.quantity + 1 };\n    } else {\n      const newI = newFreeSoldiers.findIndex(s => !s);\n      newFreeSoldiers[newI] = { ...removedSol, quantity: 1 };\n    }\n    const newSelectedSoldiers = this.removeItem(selectedSoldiers, index);\n    this.setState({ selectedSoldiers: newSelectedSoldiers, freeSoldiers: newFreeSoldiers });\n  }\n\n  currentHealth() {\n    const { selectedObstacles } = this.state;\n    const res = selectedObstacles.reduce((prev, curr) => (curr ? prev + 20 : prev), 0);\n    return res;\n  }\n\n  renderObstacleList(list, onClick) {\n    return list.map(\n      (obs, index) => (obs ? (\n        <div className={`obstacle ${obs}`} onClick={() => onClick(index)} key={keyGen()} />\n      ) : (\n        <div className=\"empty-item\" key={keyGen()}>\n          {index + 1}\n        </div>\n      ))\n    );\n  }\n\n  renderSoldierList(list, onClick, isSmall, showNumber = true, animate = false) {\n    if (!list) {\n      return null;\n    }\n    return list.map(\n      (sol, index) => (sol ? (\n        <Soldier\n          key={keyGen()}\n          onClick={() => onClick && onClick(index)}\n          type={sol.type}\n          isSmall={isSmall}\n          quantity={sol.quantity}\n          showNumber={showNumber}\n          animate={animate}\n        />\n      ) : (\n        <div className={`empty-item ${isSmall ? 'mini' : ''}`} key={keyGen()}>\n          {!isSmall ? index + 1 : ''}\n        </div>\n      ))\n    );\n  }\n\n  render() {\n    const {\n      freeSoldiers,\n      selectedSoldiers,\n      freeObstacles,\n      selectedObstacles,\n      showModal,\n    } = this.state;\n    const { userStore } = this.props;\n    return (\n      <div className=\"main py-4\">\n        <div className=\"container\">\n          <section className=\"align-items-center justify-content-between d-flex mb-4 tower-info\">\n            <div className=\"d-flex align-items-center\">\n              <div\n                className=\"tower-avatar\"\n                style={{ backgroundImage: 'url(/images/sand-castle.png)' }}\n              />\n              <div className=\"d-flex flex-column ml-2\">\n                <div className=\"health-bar\">\n                  <div style={{ backgroundColor: '#FF3636', width: `${this.currentHealth()}%` }} />\n                </div>\n                <div className=\"username\">Username 1</div>\n              </div>\n            </div>\n            <img className=\"buy\" src=\"/images/shopping-cart.svg\" alt=\"buy\" />\n          </section>\n          <div className=\"title\">My tower</div>\n          <div className=\"d-flex align-items-center\">\n            <div className=\"item-list\">\n              {this.renderObstacleList(selectedObstacles, i => this.removeObstacle(i))}\n            </div>\n            <div className=\"d-flex flex-fill justify-content-center align-items-center\">\n              <button className=\"my-button ml-3\" onClick={this.saveObstacles}>\n                Save\n              </button>\n            </div>\n          </div>\n          <div className=\"tower\">\n            <div className=\"title\">Obstacle queue</div>\n            <div className=\"item-list\">\n              {this.renderObstacleList(freeObstacles, i => this.selectObstacle(i))}\n            </div>\n          </div>\n          <div className=\"title\">My soldies</div>\n          <div className=\"d-flex align-items-center\">\n            <div className=\"item-list\">{this.renderSoldierList(userStore.soldiers)}</div>\n            <div className=\"d-flex flex-fill justify-content-center\">\n              <button className=\"my-button ml-3\" onClick={() => this.setState({ showModal: true })}>\n                Attack\n              </button>\n            </div>\n          </div>\n        </div>\n        <Modal open={showModal} onClose={this.onModalClosed} center>\n          <h3>Setup for your army</h3>\n          <div className=\"item-list\">\n            {this.renderSoldierList(freeSoldiers, i => this.selectSoldier(i), true)}\n          </div>\n          <div className=\"item-list mt-3\">\n            {this.renderSoldierList(\n              selectedSoldiers,\n              i => this.removeSoldier(i),\n              false,\n              false,\n              true\n            )}\n          </div>\n          <div>\n            <input type=\"text\" className=\"my-input\" placeholder=\"Target address\" />\n          </div>\n          <div className=\"d-flex justify-content-center mt-2\">\n            <button className=\"my-button\" onClick={this.attack}>\n              Start attack\n            </button>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  userStore: PropTypes.instanceOf(PropTypes.object),\n  notificationStore: PropTypes.instanceOf(PropTypes.object),\n};\n\nexport default Main;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\nimport {\n  Router, Route, Switch, Redirect,\n} from 'react-router-dom';\nimport { Main, LoadingScreen } from './components/pages';\nimport history from './utils/history';\n\nconst CONDITION = true;\n\nclass MyRouter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      progress: 0,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.initProgress(), 1000);\n  }\n\n  finishProgress = () => {\n    const { progress } = this.state;\n    if (progress >= 0.9) {\n      return;\n    }\n    this.setState({ progress: progress + 0.1 });\n    setTimeout(this.finishProgress, 100);\n  };\n\n  checkStatus = () => {\n    if (CONDITION) {\n      return this.finishProgress();\n    }\n    setTimeout(this.checkStatus, 100);\n  };\n\n  initProgress = () => {\n    const { progress } = this.state;\n    if (progress >= 0.5) {\n      this.checkStatus();\n      return;\n    }\n    this.setState({ progress: progress + 0.1 });\n    setTimeout(this.initProgress, 100);\n  };\n\n  render() {\n    const { progress } = this.state;\n    return progress >= 0.9 ? (\n      <Router history={history}>\n        <Switch>\n          <Route path=\"/main\" component={Main} />\n          <Route path=\"/\" exact={true} render={() => <Redirect to=\"/main\" />} />\n        </Switch>\n      </Router>\n    ) : (\n      <LoadingScreen progress={progress} />\n    );\n  }\n}\n\nexport default MyRouter;\n","import userStore from './users';\nimport notificationStore from './notification';\n\nexport default { userStore, notificationStore };\n","import { observable, action, computed } from 'mobx';\n\nclass UserStore {\n  @observable\n  id = null;\n\n  @observable\n  username = 'Username 1';\n\n  @observable\n  address = null;\n\n  @observable\n  obstacles = ['fire', 'metal', 'wood', 'water', 'earth'];\n\n  @observable\n  soldiers = [\n    {\n      id: 1,\n      type: 'earth',\n      quantity: 4,\n    },\n    {\n      id: 2,\n      type: 'wood',\n      quantity: 4,\n    },\n    {\n      id: 3,\n      type: 'water',\n      quantity: 2,\n    },\n    {\n      id: 4,\n      type: 'fire',\n      quantity: 4,\n    },\n    {\n      id: 5,\n      type: 'metal',\n      quantity: 1,\n    }\n  ];\n\n  @computed\n  get obstacleCount() {\n    return this.obstacles.length;\n  }\n\n  @action.bound\n  setData(id, username, address, obstacles) {\n    if (id) {\n      this.id = id;\n    }\n    if (username) {\n      this.username = username;\n    }\n    if (address) {\n      this.address = address;\n    }\n    if (obstacles) {\n      this.obstacles = obstacles;\n    }\n  }\n}\n\nexport default new UserStore();\n","import { observable, action } from 'mobx';\n\nclass Notification {\n  @observable\n  notifications = [];\n\n  @action.bound\n  push(_notification) {\n    this.notifications.push(_notification);\n    setTimeout(() => this.remove(_notification.id), 4000);\n  }\n\n  @action.bound\n  remove(id) {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n  }\n}\n\nexport default new Notification();\n","import React from 'react';\nimport { configure } from 'mobx';\nimport { Provider } from 'mobx-react';\nimport { Notification } from './components/shared-components';\nimport Router from './router';\nimport stores from './stores';\n\nconfigure({ enforceActions: 'observed' });\n\nconst App = () => (\n  <Provider {...stores}>\n    <React.Fragment>\n      <Router />\n      <Notification />\n    </React.Fragment>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default;\n    ReactDOM.render(<NextApp />, root);\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}